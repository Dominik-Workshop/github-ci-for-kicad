name: KiCad CI

on:
  workflow_dispatch:
  push:
    branches:
      [master, main]
  pull_request:
    branches:
      [master, main]

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Find project, schematic, and PCB files
        id: find_files
        run: |
          project_file=$(find . -type f -name "*.kicad_pro" | head -n 1)
          if [ -z "$project_file" ]; then exit 1; fi
          base_name=$(basename "$project_file" .kicad_pro)
          schematic_file=$(dirname "$project_file")/${base_name}.kicad_sch
          pcb_file=$(dirname "$project_file")/${base_name}.kicad_pcb
          if [ ! -f "$schematic_file" ] || [ ! -f "$pcb_file" ]; then exit 1; fi
          echo "base_name=$base_name" >> $GITHUB_ENV
          echo "schematic_file=$schematic_file" >> $GITHUB_ENV
          echo "pcb_file=$pcb_file" >> $GITHUB_ENV

      - name: Install KiCad V8.0.0
        run: |
          sudo add-apt-repository ppa:kicad/kicad-8.0-releases -y
          sudo apt update
          sudo apt install -y kicad

      - name: Generate schematic PDF
        run: |
          mkdir -p doc
          kicad-cli sch export pdf --output "doc/${{ env.base_name }}-schematic.pdf" ${{ env.schematic_file }}

      - name: Generate Gerber files
        run: |
          mkdir -p fab
          kicad-cli pcb export gerbers --no-protel-ext -o fab/ "${{ env.pcb_file }}"
          kicad-cli pcb export drill --format gerber --excellon-separate-th -o fab/ "${{ env.pcb_file }}"

      - name: List Generated Files
        run: |
          echo "Contents of doc/:" 
          ls -l doc/
          echo "Contents of fab/:" 
          ls -l fab/

      - name: Install dependencies (gerbv, inkscape, python3.11, pipx)
        run: |
          sudo apt update
          sudo apt install -y \
            gerbv \
            inkscape \
            python3.11 \
            python3.11-venv \
            python3.11-dev \
            python3-pip \
            curl
          
          # Install pipx for Python package isolation
          python3.11 -m pip install --upgrade pip
          python3.11 -m pip install pipx
          python3.11 -m pipx ensurepath

      - name: Install gerber2blend
        run: |
          # Using pipx to install gerber2blend in an isolated environment
          python3.11 -m pipx install git+https://github.com/antmicro/gerber2blend.git

      - name: Generate .blend file
        run: |
          # Call gerber2blend without arguments to use the default output folder `fab/`
          gerber2blend

      - name: Regenerate drill file for manufacturing
        run: |
          # Regenerate the drill file after generating the blend file
          kicad-cli pcb export drill -o fab/ "${{ env.pcb_file }}"

      - name: Zip Gerber files
        run: |
          zip -r "fab/${{ env.base_name }}-gerbers.zip" fab/*.gbr fab/*.drl

      - name: Upload generated files
        uses: actions/upload-artifact@v3
        with:
          name: output-files
          path: |
            doc/
            fab/
